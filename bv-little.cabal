name:                bv-little
version:             0.1.0.0
synopsis:            Efficient little-endian bit-vector library
category:            Data, Bit Vectors
license:             BSD3
license-file:        LICENSE
author:              Alex Washburn
maintainer:          hackage@recursion.ninja
homepage:            https://github.com/recursion-ninja/bv-little
bug-reports:         https://github.com/recursion-ninja/bv-little/issues
copyright:           (c) Alex Washburn 2018
description:
  .
  This package contains a time & space efficient implementation of little-endian
  bit-vectors. Provides implementations of applicable type-classes and numeric 
  conversions.
  .
  The declared cost of each operation is either worst-case or amortized.
  .
  If you need /big-endian/ bit-vectors, use the <https://hackage.haskell.org/package/bv bv> package instead of this one.
    
build-type:          Simple
cabal-version:       >= 1.22
                     
tested-with:         GHC == 8.4.1
                     GHC == 8.2.2
                     GHC == 8.0.2
                     GHC == 7.10.3
                     GHC == 7.8.4
                     GHC == 7.6.3
                     GHC == 7.4.2
             
extra-source-files:  changelog.md
                     README.md
                     stack.yaml

source-repository head
  type:     git
  location: https://github.com/recursion-ninja/bv-little

                      
library

  build-depends:      base             >=4.5.1
                    , deepseq
                    , hashable
                    , integer-gmp
                    , mono-traversable
                    , primitive
                    , QuickCheck

  default-language: Haskell2010

  exposed-modules:  Data.BitVector.LittleEndian
    
  ghc-options:      -O2
                    
                    -- Sanity check warnings
                    -Wall
                    -Wcompat
                    -Wdodgy-foreign-imports
                    -Wduplicate-exports
                    -Wempty-enumerations
                    -Widentities
                    -Wincomplete-patterns
                    -Wincomplete-record-updates
                    -Wincomplete-uni-patterns
                    -Wmissing-fields
                    -Wmissing-monadfail-instances
                    -Wmissing-monadfail-instances
                    -Wmissing-signatures
                    -Wnoncanonical-monadfail-instances
                    -Wnoncanonical-monad-instances
                    -Wnoncanonical-monoid-instances
                    -Woverflowed-literals
                    -Woverlapping-patterns
                    -Wredundant-constraints
                    -Wsemigroup
                    -Wtabs
                    -Wunrecognised-warning-flags
                    -Wunrecognised-warning-flags
                    -Wunused-binds
                    -Wunused-do-bind
                    -Wunused-foralls
                    -Wunused-imports
                    -Wunused-matches
                    -Wwrong-do-bind

  hs-source-dirs:   src

                       
Test-Suite test-suite

  type:             exitcode-stdio-1.0

  main-is:          TestSuite.hs

  build-depends:      base               >=4.5.1
                    , bv-little
                    , mono-traversable
                    , QuickCheck
                    , tasty
                    , tasty-hunit
                    , tasty-quickcheck

  default-language: Haskell2010


benchmark benchmark-suite

  type:             exitcode-stdio-1.0

  main-is:          Benchmarks.hs
                      
  build-depends:      base               >=4.5.1
                    , bv-little
                    , criterion
                    , deepseq

  default-language: Haskell2010

  ghc-options:      -O2
                    -fmax-simplifier-iterations=10
                    -fdicts-cheap
                    -fspec-constr-count=6
                    -fno-full-laziness
                    -threaded

                    -- Sanity check warnings
                    -Wall
                    -Wcompat
                    -Wdodgy-foreign-imports
                    -Wduplicate-exports
                    -Wempty-enumerations
                    -Widentities
                    -Wincomplete-patterns
                    -Wincomplete-record-updates
                    -Wincomplete-uni-patterns
                    -Wmissing-fields
                    -Wmissing-monadfail-instances
                    -Wmissing-monadfail-instances
                    -Wmissing-signatures
                    -Wnoncanonical-monadfail-instances
                    -Wnoncanonical-monad-instances
                    -Wnoncanonical-monoid-instances
                    -Woverflowed-literals
                    -Woverlapping-patterns
                    -Wredundant-constraints
                    -Wsemigroup
                    -Wtabs
                    -Wunrecognised-warning-flags
                    -Wunrecognised-warning-flags
                    -Wunused-binds
                    -Wunused-do-bind
                    -Wunused-foralls
                    -Wunused-imports
                    -Wunused-matches
                    -Wwrong-do-bind

                    -- Turn off type default warnings
                    -Wno-type-defaults
